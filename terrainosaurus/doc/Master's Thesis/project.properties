# This file contains the properties for configuring a DocBook project. It is
# loaded by the Ant build.xml file at startup. All properties defined in this 
# file are required (unless indicated OPTIONAL, in which case the Ant build.xml 
# file does not reference them).  Note that all paths should follow URL 
# separator conventions ('/', not '\') and that directory properties do not 
# need a trailing '/'.

# The name.project property is OPTIONAL, and provides a convenient way to 
# specify other properties (i.e., input and output filenames).

name.project = thesis


# The dir.source and dir.output properties are OPTIONAL, and provide a
# convenient way to change the root directories under which the various source 
# and output files are located.

dir.source = ${basedir}/src
dir.output = ${basedir}/output


# The dir.intermediate property is REQUIRED, and specifies where intermediate
# files are created.

dir.intermediate = ${basedir}/temp


# The dir.tools property specifies where to find the rest of the tools needed
# to build DocBook documents. This directory contains things like XML catalogs,
# DTDs, XSL sheets, and additional Ant taskdefs.

dir.docbook-tools = C:/Program Files/DocBook
dir.java-tools    = C:/Program Files/Java


# The source directory properties are REQUIRED and specify where to look for
# different kinds of source files. In each case, all files under these
# directories with the appropriate extension(s) will be included in the
# fileset for that file-type.
#   dir.source.xml     root directory for XML DocBook files (*.xml)
#   dir.source.svg     root directory for SVG graphic files (*.svg)
#   dir.source.image   root directory for raster image files (*.png, *.jpeg, ...)
#   dir.source.mathml  root directory for MathML equation files (*.mml)

dir.source.docbook   = ${dir.source}
dir.source.resources = ${dir.source}/resources
dir.source.svg       = ${dir.source.resources}
dir.source.image     = ${dir.source.resources}
dir.source.mathml    = ${dir.source.resources}


# The output directory properties are REQUIRED and specify where to place
# output files of various types.
#   dir.output.xhtml       root directory for xHTML files
#   dir.output.pdf         directory in which to place PDF files
#   dir.output.postscript  directory in which to place PostScript files

dir.output.xhtml      = ${dir.output}/html
dir.output.pdf        = ${dir.output}
dir.output.postscript = ${dir.output}


# The input & output file properties specify how the output files should be 
# named.
#   file.docbook    the name of the main DocBook XML source file
#   file.html       the name of the main output HTML file
#   file.xhtml      the name of the main output XHTML file
#   file.pdf        the name of the output PDF file
#   file.merged     the name of the intermediate (post-XInclude) XML file
#   file.fo         the name of the intermediate XSL-FO file

file.docbook.main = ${dir.source.docbook}/${name.project}.xml
file.docbook.merged = ${dir.intermediate}/${name.project}-merged.xml
file.docbook.final = ${dir.intermediate}/${name.project}-final.xml
file.intermediate.fo = ${dir.intermediate}/${name.project}.fo
file.output.xhtml = ${dir.output.html}/${name.project}.xhtml
file.output.pdf = ${dir.output.pdf}/${name.project}.pdf

# TODO: support multiple biblio DBs
file.bibliography.database = ${dir.source.docbook}/resources/bibliography-db.xml
file.intermediate.references    = ${dir.source.docbook}/references.xml


# Some processing phases aren't always necessary, especially when doing an
# incremental build, but Ant's dependency mechanism cannot always determine
# whether running them is necessary. Whether or not these phases are run
# can be controlled by setting the following properties.
phase.spellcheck.enabled        = false
phase.build-references.enabled  = true
#phase.build-references.enabled  = false
phase.xinclude.enabled          = true
